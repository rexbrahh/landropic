[package]
name = "landropic"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "Cross-platform encrypted LAN file sync - AirDrop for everyone"
readme = "README.md"
keywords = ["sync", "encryption", "file-transfer", "lan", "airdrop"]
categories = ["filesystem", "network-programming", "cryptography"]

# Integration package dependencies
[dependencies]
landro-crypto = { path = "landro-crypto" }
landro-quic = { path = "landro-quic" }
landro-proto = { path = "landro-proto" }
landro-cas = { path = "landro-cas" }
landro-index = { path = "landro-index" }
landro-chunker = { path = "landro-chunker" }

# Integration test dependencies
[dev-dependencies]
tokio = { workspace = true, features = ["test-util", "time"] }
tracing-subscriber = { workspace = true }
tempfile = { workspace = true }
chrono = { workspace = true }
rustls = { workspace = true }
prost-types = { workspace = true }
landro-crypto = { path = "landro-crypto", features = ["dangerous-allow-any"] }
tracing = { workspace = true }
blake3 = { workspace = true }
hex = { workspace = true }

[workspace]
members = [
    "landro-proto",
    "landro-crypto", 
    "landro-quic",
    "landro-chunker",
    "landro-cas",
    "landro-index",
    "landro-daemon",
    "landro-cli",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["Landropic Contributors"]
edition = "2021"
rust-version = "1.75"
license = "MIT OR Apache-2.0"
repository = "https://github.com/landropic/landropic"

[workspace.dependencies]
# Core async runtime
tokio = { version = "1.40", features = ["full"] }
futures = "0.3"

# Networking
quinn = "0.11"
rustls = { version = "0.23", features = ["std", "ring"] }
rustls-pemfile = "2.1"
rcgen = "0.13"
zeroconf = "0.15"
time = "0.3"

# Cryptography
ed25519-dalek = { version = "2.1", features = ["rand_core"] }
x25519-dalek = { version = "2.0", features = ["static_secrets"] }
blake3 = "1.5"
chacha20poly1305 = "0.10"
rand = "0.8"
zeroize = { version = "1.8", features = ["derive"] }

# Serialization
prost = "0.13"
prost-types = "0.13"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
hex = "0.4"
chrono = { version = "0.4", features = ["serde"] }
bytes = "1.5"

# Storage
rusqlite = { version = "0.32", features = ["bundled", "backup"] }

# File system
notify = "6.1"
tempfile = "3.10"
dirs = "5.0"

# Service discovery
mdns-sd = "0.11"

# CLI
clap = { version = "4.5", features = ["derive", "env"] }
indicatif = "0.17"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Testing
proptest = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# System
uuid = { version = "1.0", features = ["v4"] }
zstd = "0.13"

[profile.release]
lto = true
codegen-units = 1
opt-level = 3
strip = true

[profile.bench]
inherits = "release"

[profile.dev]
# Faster incremental builds for development
opt-level = 0
debug = true
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
codegen-units = 256

# Fast development profile for quick iterations
[profile.dev-fast]
inherits = "dev"
opt-level = 1
debug = false
debug-assertions = false
overflow-checks = false

# Profile for testing with some optimizations
[profile.test-fast]
inherits = "dev"
opt-level = 1
